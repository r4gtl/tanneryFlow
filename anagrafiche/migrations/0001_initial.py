# Generated by Django 5.1.5 on 2025-01-20 13:09

import django.db.models.deletion
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_sito', models.CharField(max_length=100)),
                ('logo', models.ImageField(default='avatar.png', upload_to='logo')),
                ('urn', models.CharField(blank=True, max_length=50, null=True)),
                ('piva', models.CharField(blank=True, max_length=11, null=True)),
                ('indirizzo', models.CharField(blank=True, max_length=100, null=True)),
                ('cap', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('provincia', models.CharField(blank=True, max_length=2, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_cat', models.CharField(choices=[('Nessuna categoria', 'Nessuna categoria'), ('A - Raw hide/skin to tanned', 'A - Raw hide/skin to tanned'), ('B - Raw hide/skin to crust', 'B - Raw hide/skin to crust'), ('C - Raw hide/skin to finished leather', 'C - Raw hide/skin to finished leather'), ('D - Tanned hide/skin to finished leather', 'D - Tanned hide/skin to finished leather'), ('E - Crust hide/skin to finished leather', 'E - Crust hide/skin to finished leather'), ('F - Tanned hide/skin to crust leather', 'F - Tanned hide/skin to crust leather'), ('G - Raw hide/skin to pickled/pre-tanned material', 'G - Raw hide/skin to pickled/pre-tanned material')], default='Nessuna categoria', max_length=50)),
                ('secondary_cat', models.CharField(choices=[('Nessuna categoria', 'Nessuna categoria'), ('A - Raw hide/skin to tanned', 'A - Raw hide/skin to tanned'), ('B - Raw hide/skin to crust', 'B - Raw hide/skin to crust'), ('C - Raw hide/skin to finished leather', 'C - Raw hide/skin to finished leather'), ('D - Tanned hide/skin to finished leather', 'D - Tanned hide/skin to finished leather'), ('E - Crust hide/skin to finished leather', 'E - Crust hide/skin to finished leather'), ('F - Tanned hide/skin to crust leather', 'F - Tanned hide/skin to crust leather'), ('G - Raw hide/skin to pickled/pre-tanned material', 'G - Raw hide/skin to pickled/pre-tanned material')], default='Nessuna categoria', max_length=50)),
                ('tertiary_cat', models.CharField(choices=[('Nessuna categoria', 'Nessuna categoria'), ('A - Raw hide/skin to tanned', 'A - Raw hide/skin to tanned'), ('B - Raw hide/skin to crust', 'B - Raw hide/skin to crust'), ('C - Raw hide/skin to finished leather', 'C - Raw hide/skin to finished leather'), ('D - Tanned hide/skin to finished leather', 'D - Tanned hide/skin to finished leather'), ('E - Crust hide/skin to finished leather', 'E - Crust hide/skin to finished leather'), ('F - Tanned hide/skin to crust leather', 'F - Tanned hide/skin to crust leather'), ('G - Raw hide/skin to pickled/pre-tanned material', 'G - Raw hide/skin to pickled/pre-tanned material')], default='Nessuna categoria', max_length=50)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('site_area', models.FloatField(blank=True, null=True)),
                ('facility_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransferValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=20)),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ragionesociale', models.CharField(max_length=50)),
                ('indirizzo', models.CharField(blank=True, max_length=100, null=True)),
                ('cap', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('provincia', models.CharField(blank=True, max_length=50, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clienti', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['ragionesociale'],
            },
        ),
        migrations.CreateModel(
            name='FacilityContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('6a - Principal Contact Name and position', '6a - Principal Contact Name and position'), ('6b - Ultimately responsible for environmental issue at this site', '6b - Ultimately responsible for environmental issue at this site'), ('6c - Responsible on a day-to-day basis for environmental issue at this site', '6c - Responsible on a day-to-day basis for environmental issue at this site'), ('7 - Others', '7 - Others')], default='7 - Others', max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('fk_facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='anagrafiche.facility')),
            ],
        ),
        migrations.CreateModel(
            name='Fornitore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ragionesociale', models.CharField(max_length=50)),
                ('indirizzo', models.CharField(blank=True, max_length=100, null=True)),
                ('cap', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('provincia', models.CharField(blank=True, max_length=50, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('sito_web', models.CharField(blank=True, max_length=200, null=True)),
                ('e_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('categoria', models.CharField(choices=[('nessuna', 'Manca categoria'), ('pelli', 'Pelli'), ('macello', 'Macello'), ('prodotti chimici', 'Prodotti Chimici'), ('lavorazioni esterne', 'Lavorazioni Esterne'), ('servizi', 'Servizi'), ('manutenzioni', 'Manutenzioni'), ('rifiuti', 'Rifiuti')], default='nessuna', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fornitori', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['ragionesociale'],
            },
        ),
        migrations.CreateModel(
            name='DestinazioneDiversaFornitore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ragionesociale', models.CharField(max_length=50)),
                ('indirizzo', models.CharField(blank=True, max_length=100, null=True)),
                ('cap', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('provincia', models.CharField(blank=True, max_length=50, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='destinazione_diversa_fornitore', to=settings.AUTH_USER_MODEL)),
                ('fk_fornitore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinazione_diversa_fornitore', to='anagrafiche.fornitore')),
            ],
            options={
                'ordering': ['ragionesociale'],
            },
        ),
        migrations.CreateModel(
            name='LwgFornitore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lwg_urn', models.CharField(max_length=50)),
                ('lwg_score', models.CharField(blank=True, max_length=50, null=True)),
                ('lwg_range', models.CharField(blank=True, max_length=100, null=True)),
                ('lwg_date', models.DateField(blank=True, null=True)),
                ('lwg_expiry', models.DateField(blank=True, null=True)),
                ('documento', models.FileField(blank=True, null=True, upload_to='lwg_certificates/')),
                ('fk_fornitore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anagrafiche.fornitore')),
            ],
        ),
        migrations.CreateModel(
            name='XrTransferValueLwgFornitore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=10)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xrtransfervaluelwgfornitore', to=settings.AUTH_USER_MODEL)),
                ('fk_lwgcertificato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anagrafiche.lwgfornitore')),
                ('fk_transfervalue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anagrafiche.transfervalue')),
            ],
        ),
    ]
